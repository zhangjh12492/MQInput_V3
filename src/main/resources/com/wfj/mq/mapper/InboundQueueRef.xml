<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="InboundQueueRef">
    <typeAlias alias="InboundQueueRef" type="com.wfj.mq.entity.InboundQueueRef"/>

    <sql id="qrySelect">
        select sid sid,
			inbound_conf_sid inboundConfSid,
			queue_conf_sid queueConfSid,
			route_key routeKey,
			memo memo
    </sql>

    <select id="selectById" resultClass="InboundQueueRef">
        <include refid="qrySelect"/>
        from inbound_queue_ref
        where
        sid=#sid#
    </select>

    <insert id="insert">
        <selectKey resultClass="int" keyProperty="keykey">
            select LAST_INSERT_ID() AS keykey
        </selectKey>
        insert into inbound_queue_ref (
            	sid,
			inbound_conf_sid,
			queue_conf_sid,
			route_key,
            memo
            ) values (
        	#sid#,
			#inboundConfSid#,
			#queueConfSid#,
			#routeKey#,
			#memo#
        )
    </insert>

    <update id="updateById">
        update inbound_queue_ref
        <dynamic prepend="set">
            <isNotNull prepend="," property="routeKey">
                route_key=#routeKey#
            </isNotNull>
            <isNotNull prepend="," property="memo">
                memo=#memo#
            </isNotNull>
            <isNotNull prepend="," property="sid">
                sid=#sid#
            </isNotNull>
            <isNotNull prepend="," property="inboundConfSid">
                inbound_conf_sid=#inboundConfSid#
            </isNotNull>
            <isNotNull prepend="," property="queueConfSid">
                queue_conf_sid=#queueConfSid#
            </isNotNull>
        </dynamic>
        where sid=#sid#
    </update>

    <delete id="deleteById">
        delete from inbound_queue_ref where sid=#sid#
    </delete>


    <sql id="dynamicWhere">
        <dynamic prepend="where">
            <isPropertyAvailable property="routeKey">
                <isNotEmpty prepend="and" property="routeKey">
                    route_key=#routeKey#
                </isNotEmpty>
            </isPropertyAvailable>
            <isPropertyAvailable property="memo">
                <isNotEmpty prepend="and" property="memo">
                    memo=#memo#
                </isNotEmpty>
            </isPropertyAvailable>
            <isPropertyAvailable property="sid">
                <isNotEmpty prepend="and" property="sid">
                    sid=#sid#
                </isNotEmpty>
            </isPropertyAvailable>
            <isPropertyAvailable property="inboundConfSid">
                <isNotEmpty prepend="and" property="inboundConfSid">
                    inbound_conf_sid=#inboundConfSid#
                </isNotEmpty>
            </isPropertyAvailable>
            <isPropertyAvailable property="queueConfSid">
                <isNotEmpty prepend="and" property="queueConfSid">
                    queue_conf_sid=#queueConfSid#
                </isNotEmpty>
            </isPropertyAvailable>
        </dynamic>
    </sql>

    <sql id="dynamicOrderBy">
        <isPropertyAvailable property="orderBy">
            <isNotEmpty prepend=" order by " property="orderBy">
                $orderBy$
            </isNotEmpty>
        </isPropertyAvailable>
    </sql>

    <select id="selectByCond" resultClass="InboundQueueRef">
        <include refid="qrySelect"/>
        from inbound_queue_ref
        <include refid="dynamicWhere"/>
        <include refid="dynamicOrderBy"/>
    </select>

    <select id="selectCountByCond" resultClass="Integer">
        select count(1) as kk
        from inbound_queue_ref
        <include refid="dynamicWhere"/>
    </select>

    <select id="selectBindCount" resultClass="Integer">
        select count(*)
        from inbound_queue_ref iqr
        left join inbound_conf ic on iqr.inbound_conf_sid=ic.sid
        where ic.system_no=#systemNo#
        and ic.service_no=#serviceNo#
        and iqr.status=1
    </select>

</sqlMap>
